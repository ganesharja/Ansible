- name: Confugiring the {{COMPONENT}} repo
  ansible.builtin.copy:
    src: "{{COMPONENT}}.repo"
    dest: /etc/yum.repos.d/{{COMPONENT}}.repo 

- name: Installing {{COMPONENT}}
  ansible.builtin.package:
      name: mysql-community-server
      state: present

- name: Starting {{COMPONENT}}
  ansible.builtin.systemd:
    name: mysqld
    state: restarted
    enabled: yes

- name: Fetches the log file from the remote node 
  ansible.builtin.slurp:
    src: /var/log/mysqld.log
  register: pwd_log

- name: Decode the log content
  set_fact:
    decoded_content: "{{ pwd_log['content'] | b64decode }}"

- name: Find the temporary password line
  set_fact:
    temp_password_line: "{{ decoded_content | regex_findall('.*temporary password.*') | join(' ') }}"

- name: Extract the password
  set_fact:
    DEFAULT_PASSWORD: "{{ temp_password_line.split()[-1] }}"

# - name: Extracting the root password
#   ansible.builtin.set_fact:
#     DEFAULT_PASSWORD: "{{ pwd_log['content'] | b64decode | regex_findall('.*temporary password.*')| join(' ') | split(' ') | last }}"

- name: Resetting Default root password of {{COMPONENT}} 
  ansible.builtin.shell: echo "ALTER USER 'root'@'localhost' IDENTIFIED BY 'RoboShop@1'" | mysql --connect-expired-password -uroot -p"{{DEFAULT_PASSWORD}}"

- name: Removing {{COMPONENT}} password validate plugin 
  ansible.builtin.shell: echo "uninstall plugin validate_password;" | mysql -uroot -pRoboShop@1 
  ignore_errors: yes

# - name: Download and extracting {{COMPONENT}}
#   ansible.builtin.unarchive:
#     src: https://github.com/stans-robot-project/{{COMPONENT}}/archive/main.zip
#     dest: /tmp 
#     remote_src: yes

- name: Configuring the name
  ansible.builtin.include_role:
    name: common
    tasks_from: set_name